// Generated by ifacemaker. DO NOT EDIT.

package bindings

import (
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// IBridgePoolDepositNotifierFilterer ...
type IBridgePoolDepositNotifierFilterer interface {
	// FilterDeposited is a free log retrieval operation binding the contract event 0xefd7bb4f992963087670aa168590baee24d227ff5c18ae3790ef7ec22bde6274.
	//
	// Solidity: event Deposited(uint256 nonce, address ercContract, address owner, uint256 number, uint256 networkId)
	FilterDeposited(opts *bind.FilterOpts) (*BridgePoolDepositNotifierDepositedIterator, error)
	// WatchDeposited is a free log subscription operation binding the contract event 0xefd7bb4f992963087670aa168590baee24d227ff5c18ae3790ef7ec22bde6274.
	//
	// Solidity: event Deposited(uint256 nonce, address ercContract, address owner, uint256 number, uint256 networkId)
	WatchDeposited(opts *bind.WatchOpts, sink chan<- *BridgePoolDepositNotifierDeposited) (event.Subscription, error)
	// ParseDeposited is a log parse operation binding the contract event 0xefd7bb4f992963087670aa168590baee24d227ff5c18ae3790ef7ec22bde6274.
	//
	// Solidity: event Deposited(uint256 nonce, address ercContract, address owner, uint256 number, uint256 networkId)
	ParseDeposited(log types.Log) (*BridgePoolDepositNotifierDeposited, error)
}
