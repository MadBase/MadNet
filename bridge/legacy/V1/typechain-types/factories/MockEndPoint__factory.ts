/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type { MockEndPoint, MockEndPointInterface } from "../MockEndPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "f",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "AddedOne",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "AddedTwo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "lock",
        type: "bool",
      },
    ],
    name: "UpgradeLock",
    type: "event",
  },
  {
    inputs: [],
    name: "addOne",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addTwo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516102c63803806102c683398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161023c61008a600039600060cd015261023c6000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b1461007e578063c45a0155146100c8578063e5aa3d58146100ef57600080fd5b80634d47524e1461006c5780636057d3ee14610076575b600080fd5b610074610106565b005b610074610144565b60005461009e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61009e7f000000000000000000000000000000000000000000000000000000000000000081565b6100f860015481565b6040519081526020016100bf565b6001546101149060026101b6565b60018190556040517fbfce3a5a2a77b031b0a1ccac19738da9dec550c09b2f06f20fb4952517aef5bd90600090a2565b60018054906000610154836101ce565b90915550506001546040517f395a766f999fe60fe2f05f4b28cac630e02ee29e14a848b81a7fd5ae522bc5be90600090a2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156101c9576101c9610187565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036101ff576101ff610187565b506001019056fea264697066735822122029824d1ca0a5b0c1cf0be66e097cf90480cef206d5eed642c1f48c0106a76d0a64736f6c634300080d0033";

type MockEndPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockEndPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockEndPoint__factory extends ContractFactory {
  constructor(...args: MockEndPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockEndPoint";
  }

  deploy(
    f: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockEndPoint> {
    return super.deploy(f, overrides || {}) as Promise<MockEndPoint>;
  }
  getDeployTransaction(
    f: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(f, overrides || {});
  }
  attach(address: string): MockEndPoint {
    return super.attach(address) as MockEndPoint;
  }
  connect(signer: Signer): MockEndPoint__factory {
    return super.connect(signer) as MockEndPoint__factory;
  }
  static readonly contractName: "MockEndPoint";
  public readonly contractName: "MockEndPoint";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockEndPointInterface {
    return new utils.Interface(_abi) as MockEndPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockEndPoint {
    return new Contract(address, _abi, signerOrProvider) as MockEndPoint;
  }
}
