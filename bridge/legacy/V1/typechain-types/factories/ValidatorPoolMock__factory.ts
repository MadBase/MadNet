/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type {
  ValidatorPoolMock,
  ValidatorPoolMockInterface,
} from "../ValidatorPoolMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MaintenanceScheduled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "validatorStakingTokenID",
        type: "uint256",
      },
    ],
    name: "ValidatorJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "publicStakingTokenID",
        type: "uint256",
      },
    ],
    name: "ValidatorLeft",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ValidatorMajorSlashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "publicStakingTokenID",
        type: "uint256",
      },
    ],
    name: "ValidatorMinorSlashed",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_INTERVAL_WITHOUT_SNAPSHOTS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POSITION_LOCK_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
    ],
    name: "burnToValidatorStaking",
    outputs: [
      {
        internalType: "uint256",
        name: "payoutEth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "payoutAToken",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID_",
        type: "uint256",
      },
    ],
    name: "burnValidatorStaking",
    outputs: [
      {
        internalType: "uint256",
        name: "payoutEth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "payoutAToken",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimExitingNFTPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "collectProfits",
    outputs: [
      {
        internalType: "uint256",
        name: "payoutEth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "payoutToken",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "completeETHDKG",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDisputerReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "getLocation",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "validators_",
        type: "address[]",
      },
    ],
    name: "getLocations",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxNumValidators",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    name: "getMetamorphicContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
    ],
    name: "getValidator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getValidatorData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "_address",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "_tokenID",
            type: "uint256",
          },
        ],
        internalType: "struct ValidatorData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValidatorsAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValidatorsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeETHDKG",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "isAccusable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "isConsensusRunning",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "isInExitingQueue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "isMaintenanceScheduled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "isValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "address",
        name: "disputer",
        type: "address",
      },
    ],
    name: "majorSlash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "address",
        name: "disputer",
        type: "address",
      },
    ],
    name: "minorSlash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
    ],
    name: "mintToValidatorStaking",
    outputs: [
      {
        internalType: "uint256",
        name: "stakeID_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintValidatorStaking",
    outputs: [
      {
        internalType: "uint256",
        name: "stakeID_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseConsensus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "aliceNetHeight_",
        type: "uint256",
      },
    ],
    name: "pauseConsensusOnArbitraryHeight",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "validators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "stakerTokenIDs",
        type: "uint256[]",
      },
    ],
    name: "registerValidators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "scheduleMaintenance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isRunning",
        type: "bool",
      },
    ],
    name: "setConsensusRunning",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "disputerReward_",
        type: "uint256",
      },
    ],
    name: "setDisputerReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "ip",
        type: "string",
      },
    ],
    name: "setLocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxNumValidators_",
        type: "uint256",
      },
    ],
    name: "setMaxNumValidators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setSnapshot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeAmount_",
        type: "uint256",
      },
    ],
    name: "setStakeAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "tryGetTokenID",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "unregisterAllValidators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "validators",
        type: "address[]",
      },
    ],
    name: "unregisterValidators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5033608052620000c468536e617073686f747360b81b6200003260805190565b6040517fff0000000000000000000000000000000000000000000000000000000000000060208201526001600160601b0319606083901b166021820152603581018390527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be6055820181905260009160750160408051601f198184030181529190528051602090910120949350505050565b6001600160a01b031660a052620000e865455448444b4760d01b6200003260805190565b6001600160a01b031660c052620001166f56616c696461746f725374616b696e6760801b6200003260805190565b6001600160a01b031660e0526200013a6520aa37b5b2b760d11b6200003260805190565b6001600160a01b03166101005260805160a05160c05160e0516101005161211d620001d960003960008181610a0201528181610ac70152818161130801526113cd0152600081816107dc01528181610b0301528181610bbc015281816111f4015281816114090152611508015260008181610943015261113101526000818161087d0152610fb2015260008181610cb10152610f2d015261211d6000f3fe608060405234801561001057600080fd5b50600436106102de5760003560e01c80638653a46511610186578063c8d1a5e4116100e3578063e4ad75f111610097578063f6442e2411610071578063f6442e2414610763578063facd743b1461076b578063fbd317231461077e57600080fd5b8063e4ad75f11461035c578063ee9e49bd1461070b578063f5fe902f1461075557600080fd5b8063d2992f54116100c8578063d2992f541461067d578063d2cdee3e14610684578063d9e0dc59146106dd57600080fd5b8063c8d1a5e414610651578063c958e0d61461067557600080fd5b8063b5d896271161013a578063c09514511161011f578063c0951451146105e7578063c6e86ad61461062b578063c88fe0f61461063e57600080fd5b8063b5d89627146105c1578063bc33bb01146105d457600080fd5b80639c7d89611161016b5780639c7d89611461059d5780639c87e3ed146105b25780639ccdf830146105ba57600080fd5b80638653a4651461045d5780638f5799241461055857600080fd5b806361aee1351161023f57806376207f9c116101f35780637d907284116101cd5780637d907284146103d15780638129fc1c14610447578063827bfbdf1461044f57600080fd5b806376207f9c1461040d578063769cc6951461042d5780637cbfd42f1461043457600080fd5b806365bd91af1161022457806365bd91af146103f25780636c0da0b4146103d1578063722580b61461040557600080fd5b806361aee135146103ea57806364c0461c146102e357600080fd5b80632380db1a1161029657806328ccaa291161027b57806328ccaa29146103ca57806343808c50146103d157806357b51c9c146103e257600080fd5b80632380db1a1461037057806327498240146103b457600080fd5b80631885570f116102c75780631885570f146103255780631e5975f41461035457806320c2856d1461035c57600080fd5b8063048d56c7146102e3578063053601bf146102f8575b600080fd5b6102f66102f1366004611ac6565b610786565b005b61030b610306366004611af9565b610793565b604080519283526020830191909152015b60405180910390f35b60045474010000000000000000000000000000000000000000900460ff165b604051901515815260200161031c565b6102f6610851565b61034461036a366004611b12565b50600090565b6102f6600480547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b6103bc610931565b60405190815260200161031c565b6001610344565b6102f66103df366004611af9565b50565b6102f6610941565b6103bc600081565b6102f6610400366004611c48565b6109c3565b6005546103bc565b61042061041b366004611d03565b6109cc565b60405161031c9190611dab565b60006103bc565b6103bc610442366004611b12565b6109fe565b6102f6610c85565b6102f66103df366004611e2b565b61053361046b366004611ede565b6040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606083901b166021820152603581018390527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be60558201819052600091607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161031c565b6102f6600480547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff167501000000000000000000000000000000000000000000179055565b6105a5610e5b565b60405161031c9190611f01565b6103bc600381565b60016103bc565b6105336105cf366004611af9565b610e67565b6102f66105e2366004611af9565b610f01565b6105fa6105f5366004611af9565b611190565b60408051825173ffffffffffffffffffffffffffffffffffffffff168152602092830151928101929092520161031c565b6102f6610639366004611d03565b6111af565b61030b61064c366004611ede565b6111ef565b6004547501000000000000000000000000000000000000000000900460ff16610344565b60008061030b565b60056103bc565b6102f6610692366004611f69565b600480549115157501000000000000000000000000000000000000000000027fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff909216919091179055565b6106fe6106eb366004611b12565b5060408051602081019091526000815290565b60405161031c9190611f86565b610723610719366004611b12565b5060009081908190565b60408051931515845273ffffffffffffffffffffffffffffffffffffffff90921660208401529082015260600161031c565b6102f66103df366004611b12565b6102f66112b8565b610344610779366004611b12565b6112f9565b6103bc611304565b61078f82611575565b5050565b6040517f42966c6800000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906342966c689060240160408051808303816000875af1158015610824573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108489190611f99565b91509150915091565b604080517f323030380000000000000000000000000000000000000000000000000000000060208201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163314910160405160208183030381529060405290610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd9190611f86565b60405180910390fd5b50600480547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff169055565b600061093c60025490565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166357b51c9c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156109a957600080fd5b505af11580156109bd573d6000803e3d6000fd5b50505050565b61078f82611580565b604080516001808252818301909252606091816020015b60608152602001906001900390816109e35790505092915050565b60007f00000000000000000000000000000000000000000000000000000000000000006005546040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481019190915273ffffffffffffffffffffffffffffffffffffffff91909116906323b872dd906064016020604051808303816000875af1158015610aa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac49190611fbd565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f00000000000000000000000000000000000000000000000000000000000000006005546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015610b95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb99190611fbd565b507f00000000000000000000000000000000000000000000000000000000000000006005546040517f2baf2acb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482019290925260016044820152911690632baf2acb906064016020604051808303816000875af1158015610c5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7f9190611fda565b92915050565b604080517f323030300000000000000000000000000000000000000000000000000000000060208201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163314910160405160208183030381529060405290610d31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd9190611f86565b50600054610100900460ff16610d4d5760005460ff1615610d51565b303b155b610ddd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016108fd565b600054610100900460ff16158015610e1c57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b69043c33c193756480000060055580156103df57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b606061093c600261160c565b6000610e7260025490565b82107f3831350000000000000000000000000000000000000000000000000000000000604051602001610ea791815260200190565b60405160208183030381529060405290610eee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd9190611f86565b50610efa6002836116de565b5192915050565b604080517f323030300000000000000000000000000000000000000000000000000000000060208201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163314910160405160208183030381529060405290610fad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd9190611f86565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663026c2b7e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561101b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103f9190611fda565b6110499190612022565b43117f383034000000000000000000000000000000000000000000000000000000000060405160200161107e91815260200190565b604051602081830303815290604052906110c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd9190611f86565b50600480547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1681556040517fdf8d157b00000000000000000000000000000000000000000000000000000000815290810182905273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063df8d157b90602401600060405180830381600087803b15801561117557600080fd5b505af1158015611189573d6000803e3d6000fd5b5050505050565b6040805180820190915260008082526020820152610c7f6002836116de565b60005b815181101561078f576111dd8282815181106111d0576111d061203a565b6020026020010151611575565b806111e781612069565b9150506111b2565b6000807f00000000000000000000000000000000000000000000000000000000000000006040517fea785a5e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015260248201879052919091169063ea785a5e9060440160408051808303816000875af1158015611289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ad9190611f99565b915091509250929050565b60006112c360025490565b11156112f7576112f26112ec60016112da60025490565b6112e491906120a1565b6002906116de565b51611575565b6112b8565b565b6000610c7f8261174f565b60007f00000000000000000000000000000000000000000000000000000000000000006005546040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481019190915273ffffffffffffffffffffffffffffffffffffffff91909116906323b872dd906064016020604051808303816000875af11580156113a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ca9190611fbd565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f00000000000000000000000000000000000000000000000000000000000000006005546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af115801561149b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114bf9190611fbd565b506005546040517fa0712d68000000000000000000000000000000000000000000000000000000008152600481019190915273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063a0712d68906024016020604051808303816000875af1158015611551573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c9190611fda565b61078f60028261177c565b60005b815181101561078f576000600154600161159d9190612022565b90506115f660405180604001604052808585815181106115bf576115bf61203a565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16815260200183815250600261196690919063ffffffff16565b506001558061160481612069565b915050611583565b6060600061161983611a17565b90506000815167ffffffffffffffff81111561163757611637611b34565b604051908082528060200260200182016040528015611660578160200160208202803683370190505b50905060005b82518110156116d6578281815181106116815761168161203a565b60200260200101516000015182828151811061169f5761169f61203a565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152806116ce81612069565b915050611666565b509392505050565b60408051808201909152600080825260208201528260000182815481106117075761170761203a565b600091825260209182902060408051808201909152600290920201805473ffffffffffffffffffffffffffffffffffffffff1682526001015491810191909152905092915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120541515610c7f565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600183016020526040812054801561195c5760006117b76001836120a1565b85549091506000906117cb906001906120a1565b90508181146118b35760008660000182815481106117eb576117eb61203a565b600091825260209182902060408051808201909152600290920201805473ffffffffffffffffffffffffffffffffffffffff1682526001015491810191909152875490915081908890859081106118445761184461203a565b6000918252602080832084516002939093020180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff938416178155938101516001948501559351168152908801909152604090208390555b85548690806118c4576118c46120b8565b6000828152602080822060027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9094019384020180547fffffffffffffffffffffffff000000000000000000000000000000000000000016815560019081018390559290935573ffffffffffffffffffffffffffffffffffffffff8816815288820190925260408220919091559350610c7f92505050565b6000915050610c7f565b805173ffffffffffffffffffffffffffffffffffffffff166000908152600183016020526040812054611a0f575081546001808201845560008481526020808220855160029095020180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90951694851781558582015190840155855493825282860190526040902091909155610c7f565b506000610c7f565b606081600001805480602002602001604051908101604052809291908181526020016000905b82821015611a925760008481526020908190206040805180820190915260028502909101805473ffffffffffffffffffffffffffffffffffffffff168252600190810154828401529083529092019101611a3d565b505050509050919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611ac157600080fd5b919050565b60008060408385031215611ad957600080fd5b611ae283611a9d565b9150611af060208401611a9d565b90509250929050565b600060208284031215611b0b57600080fd5b5035919050565b600060208284031215611b2457600080fd5b611b2d82611a9d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611baa57611baa611b34565b604052919050565b600067ffffffffffffffff821115611bcc57611bcc611b34565b5060051b60200190565b600082601f830112611be757600080fd5b81356020611bfc611bf783611bb2565b611b63565b82815260059290921b84018101918181019086841115611c1b57600080fd5b8286015b84811015611c3d57611c3081611a9d565b8352918301918301611c1f565b509695505050505050565b60008060408385031215611c5b57600080fd5b823567ffffffffffffffff80821115611c7357600080fd5b611c7f86838701611bd6565b9350602091508185013581811115611c9657600080fd5b85019050601f81018613611ca957600080fd5b8035611cb7611bf782611bb2565b81815260059190911b82018301908381019088831115611cd657600080fd5b928401925b82841015611cf457833582529284019290840190611cdb565b80955050505050509250929050565b600060208284031215611d1557600080fd5b813567ffffffffffffffff811115611d2c57600080fd5b611d3884828501611bd6565b949350505050565b6000815180845260005b81811015611d6657602081850181015186830182015201611d4a565b81811115611d78576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611e1e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611e0c858351611d40565b94509285019290850190600101611dd2565b5092979650505050505050565b60006020808385031215611e3e57600080fd5b823567ffffffffffffffff80821115611e5657600080fd5b818501915085601f830112611e6a57600080fd5b813581811115611e7c57611e7c611b34565b611eac847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611b63565b91508082528684828501011115611ec257600080fd5b8084840185840137600090820190930192909252509392505050565b60008060408385031215611ef157600080fd5b82359150611af060208401611a9d565b6020808252825182820181905260009190848201906040850190845b81811015611f4f57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101611f1d565b50909695505050505050565b80151581146103df57600080fd5b600060208284031215611f7b57600080fd5b8135611b2d81611f5b565b602081526000611b2d6020830184611d40565b60008060408385031215611fac57600080fd5b505080516020909101519092909150565b600060208284031215611fcf57600080fd5b8151611b2d81611f5b565b600060208284031215611fec57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561203557612035611ff3565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361209a5761209a611ff3565b5060010190565b6000828210156120b3576120b3611ff3565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220ef84e978db38379b32a6f3e026302dc85b5748c6e07309cbab02b904fa54c2f664736f6c634300080d0033";

type ValidatorPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ValidatorPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ValidatorPoolMock__factory extends ContractFactory {
  constructor(...args: ValidatorPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ValidatorPoolMock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ValidatorPoolMock> {
    return super.deploy(overrides || {}) as Promise<ValidatorPoolMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ValidatorPoolMock {
    return super.attach(address) as ValidatorPoolMock;
  }
  connect(signer: Signer): ValidatorPoolMock__factory {
    return super.connect(signer) as ValidatorPoolMock__factory;
  }
  static readonly contractName: "ValidatorPoolMock";
  public readonly contractName: "ValidatorPoolMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ValidatorPoolMockInterface {
    return new utils.Interface(_abi) as ValidatorPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ValidatorPoolMock {
    return new Contract(address, _abi, signerOrProvider) as ValidatorPoolMock;
  }
}
