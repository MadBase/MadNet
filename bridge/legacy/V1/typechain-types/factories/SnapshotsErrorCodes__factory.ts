/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type {
  SnapshotsErrorCodes,
  SnapshotsErrorCodesInterface,
} from "../SnapshotsErrorCodes";

const _abi = [
  {
    inputs: [],
    name: "SNAPSHOT_CALLER_NOT_ETHDKG_PARTICIPANT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SNAPSHOT_CONSENSUS_RUNNING",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SNAPSHOT_INCORRECT_BLOCK_HEIGHT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SNAPSHOT_INCORRECT_CHAIN_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SNAPSHOT_MIGRATION_INPUT_DATA_MISMATCH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SNAPSHOT_MIGRATION_NOT_ALLOWED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SNAPSHOT_MIN_BLOCKS_INTERVAL_NOT_PASSED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SNAPSHOT_ONLY_VALIDATORS_ALLOWED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SNAPSHOT_SIGNATURE_VERIFICATION_FAILED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SNAPSHOT_WRONG_MASTER_PUBLIC_KEY",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61029b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100c85760003560e01c806383d995fa116100805780638d17de64116100655780638d17de64146101f05780639854bdc514610217578063adcb3a441461023e57600080fd5b806383d995fa146101a257806385c9dba1146101c957600080fd5b80633f772c6f116100b15780633f772c6f1461012d5780634a1ec2ee146101545780634f2adaee1461017b57600080fd5b80630c24555d146100cd5780631d449ed114610106575b600080fd5b6100f47f343036000000000000000000000000000000000000000000000000000000000081565b60405190815260200160405180910390f35b6100f47f343035000000000000000000000000000000000000000000000000000000000081565b6100f47f343037000000000000000000000000000000000000000000000000000000000081565b6100f47f343032000000000000000000000000000000000000000000000000000000000081565b6100f47f343038000000000000000000000000000000000000000000000000000000000081565b6100f47f343030000000000000000000000000000000000000000000000000000000000081565b6100f47f343034000000000000000000000000000000000000000000000000000000000081565b6100f47f343031000000000000000000000000000000000000000000000000000000000081565b6100f47f343039000000000000000000000000000000000000000000000000000000000081565b6100f47f34303300000000000000000000000000000000000000000000000000000000008156fea26469706673582212208e05014477c9cc8699e53db43d80a1995216df16691c12000b54187751e2813864736f6c634300080d0033";

type SnapshotsErrorCodesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SnapshotsErrorCodesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SnapshotsErrorCodes__factory extends ContractFactory {
  constructor(...args: SnapshotsErrorCodesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SnapshotsErrorCodes";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SnapshotsErrorCodes> {
    return super.deploy(overrides || {}) as Promise<SnapshotsErrorCodes>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SnapshotsErrorCodes {
    return super.attach(address) as SnapshotsErrorCodes;
  }
  connect(signer: Signer): SnapshotsErrorCodes__factory {
    return super.connect(signer) as SnapshotsErrorCodes__factory;
  }
  static readonly contractName: "SnapshotsErrorCodes";
  public readonly contractName: "SnapshotsErrorCodes";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SnapshotsErrorCodesInterface {
    return new utils.Interface(_abi) as SnapshotsErrorCodesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SnapshotsErrorCodes {
    return new Contract(address, _abi, signerOrProvider) as SnapshotsErrorCodes;
  }
}
