/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type {
  ATokenMinterMock,
  ATokenMinterMockInterface,
} from "../ATokenMinterMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    name: "getMetamorphicContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50336080526100bd6520aa37b5b2b760d11b61002b60805190565b6040517fff0000000000000000000000000000000000000000000000000000000000000060208201526001600160601b0319606083901b166021820152603581018390527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be6055820181905260009160750160408051601f198184030181529190528051602090910120949350505050565b6001600160a01b031660a05260805160a0516102b36100eb60003960006101510152600050506102b36000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806340c10f191461003b5780638653a46514610050575b600080fd5b61004e610049366004610227565b61014f565b005b61012661005e366004610251565b6040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606083901b166021820152603581018390527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be60558201819052600091607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000006040517f99f9889800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820184905291909116906399f9889890604401600060405180830381600087803b1580156101e257600080fd5b505af11580156101f6573d6000803e3d6000fd5b505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461022257600080fd5b919050565b6000806040838503121561023a57600080fd5b610243836101fe565b946020939093013593505050565b6000806040838503121561026457600080fd5b82359150610274602084016101fe565b9050925092905056fea26469706673582212206d332bd3a7b04effd52840cf50409363e1a91f286f03da2d588029dd5834929264736f6c634300080d0033";

type ATokenMinterMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ATokenMinterMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ATokenMinterMock__factory extends ContractFactory {
  constructor(...args: ATokenMinterMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ATokenMinterMock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ATokenMinterMock> {
    return super.deploy(overrides || {}) as Promise<ATokenMinterMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ATokenMinterMock {
    return super.attach(address) as ATokenMinterMock;
  }
  connect(signer: Signer): ATokenMinterMock__factory {
    return super.connect(signer) as ATokenMinterMock__factory;
  }
  static readonly contractName: "ATokenMinterMock";
  public readonly contractName: "ATokenMinterMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ATokenMinterMockInterface {
    return new utils.Interface(_abi) as ATokenMinterMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ATokenMinterMock {
    return new Contract(address, _abi, signerOrProvider) as ATokenMinterMock;
  }
}
