/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type {
  MockInitializable,
  MockInitializableInterface,
} from "../MockInitializable";

const _abi = [
  {
    inputs: [],
    name: "factoryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fail",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getImut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVar",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory_",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_v",
        type: "uint256",
      },
    ],
    name: "setV",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052730bbf39118ff9dafdc8407c507068d4757262306960805234801561002857600080fd5b506080516105ed610044600039600061017d01526105ed6000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063a69df4b511610076578063af6dcca31161005b578063af6dcca3146101af578063f83d08ba146101c2578063fe4b84df146101ca57600080fd5b8063a69df4b51461019f578063a9cc4718146101a757600080fd5b80635e8d510b116100a75780635e8d510b1461013157806388cc58e414610139578063966dae0e1461017857600080fd5b8063477a5c98146100c35780635bb47808146100da575b600080fd5b6001545b6040519081526020015b60405180910390f35b61012f6100e8366004610561565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b005b6002546100c7565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d1565b6101537f000000000000000000000000000000000000000000000000000000000000000081565b61012f6101dd565b61012f61021f565b61012f6101bd36600461059e565b600155565b61012f610286565b61012f6101d836600461059e565b6102d2565b61021d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff805473ffffffffffffffffffffffffffffffffffffffff169055565b565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f4661696c6564210000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b61021d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80547fca11c0de15dead10cced00000000000000000000000000000000000000000000179055565b600354610100900460ff166102ed5760035460ff16156102f1565b303b155b61037d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161027d565b600354610100900460ff161580156103bc57600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b6103c5826103f8565b80156103f457600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050565b600354610100900460ff1661048f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161027d565b6104988161049b565b50565b600354610100900460ff16610532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161027d565b600255600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055565b60006020828403121561057357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461059757600080fd5b9392505050565b6000602082840312156105b057600080fd5b503591905056fea2646970667358221220a5acad0b8dc32370a56cac4d3c0695cc71aa32abb484a172da05c9037038e07164736f6c634300080d0033";

type MockInitializableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockInitializableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockInitializable__factory extends ContractFactory {
  constructor(...args: MockInitializableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockInitializable";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockInitializable> {
    return super.deploy(overrides || {}) as Promise<MockInitializable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockInitializable {
    return super.attach(address) as MockInitializable;
  }
  connect(signer: Signer): MockInitializable__factory {
    return super.connect(signer) as MockInitializable__factory;
  }
  static readonly contractName: "MockInitializable";
  public readonly contractName: "MockInitializable";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockInitializableInterface {
    return new utils.Interface(_abi) as MockInitializableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockInitializable {
    return new Contract(address, _abi, signerOrProvider) as MockInitializable;
  }
}
