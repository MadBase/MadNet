/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type { Governance, GovernanceInterface } from "../Governance";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "ValueUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "updateValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b503360805260805161020e61002f60003960006071015261020e6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634651248614610030575b600080fd5b61004361003e366004610139565b610045565b005b604080517f323030000000000000000000000000000000000000000000000000000000000060208201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633149101604051602081830303815290604052906100fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f19190610165565b60405180910390fd5b506040513381528190839085907f36dcd0e03525dedd9d5c21a263ef5f35d030298b5c48f1a713006aefc064ad059060200160405180910390a4505050565b60008060006060848603121561014e57600080fd5b505081359360208301359350604090920135919050565b600060208083528351808285015260005b8181101561019257858101830151858201604001528201610176565b818111156101a4576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01692909201604001939250505056fea26469706673582212200c0f687ea806091c9fc1714d884d39d738c1ecc7627a138e745e7efaad35f49f64736f6c634300080d0033";

type GovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Governance__factory extends ContractFactory {
  constructor(...args: GovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Governance";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Governance> {
    return super.deploy(overrides || {}) as Promise<Governance>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Governance {
    return super.attach(address) as Governance;
  }
  connect(signer: Signer): Governance__factory {
    return super.connect(signer) as Governance__factory;
  }
  static readonly contractName: "Governance";
  public readonly contractName: "Governance";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceInterface {
    return new utils.Interface(_abi) as GovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Governance {
    return new Contract(address, _abi, signerOrProvider) as Governance;
  }
}
