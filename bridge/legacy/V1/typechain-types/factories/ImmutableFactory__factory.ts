/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";
import type {
  ImmutableFactory,
  ImmutableFactoryInterface,
} from "../ImmutableFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    name: "getMetamorphicContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

export class ImmutableFactory__factory {
  static readonly abi = _abi;
  static createInterface(): ImmutableFactoryInterface {
    return new utils.Interface(_abi) as ImmutableFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ImmutableFactory {
    return new Contract(address, _abi, signerOrProvider) as ImmutableFactory;
  }
}
