/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type {
    ReentrantLoopBurnAccount,
    ReentrantLoopBurnAccountInterface,
} from "../ReentrantLoopBurnAccount";

const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "aToken",
        outputs: [
            {
                internalType: "contract AToken",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "who",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount_",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenID_",
                type: "uint256",
            },
        ],
        name: "approveNFT",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenID",
                type: "uint256",
            },
        ],
        name: "burn",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to_",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenID",
                type: "uint256",
            },
        ],
        name: "burnTo",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenID_",
                type: "uint256",
            },
        ],
        name: "collectEth",
        outputs: [
            {
                internalType: "uint256",
                name: "payout",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenID_",
                type: "uint256",
            },
        ],
        name: "collectToken",
        outputs: [
            {
                internalType: "uint256",
                name: "payout",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount_",
                type: "uint256",
            },
        ],
        name: "depositEth",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount_",
                type: "uint256",
            },
        ],
        name: "depositToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenID",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "lockDuration",
                type: "uint256",
            },
        ],
        name: "lockWithdraw",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount_",
                type: "uint256",
            },
        ],
        name: "mint",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to_",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount_",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "duration_",
                type: "uint256",
            },
        ],
        name: "mintTo",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "publicStaking",
        outputs: [
            {
                internalType: "contract PublicStaking",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenID_",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "bool",
                name: "approve_",
                type: "bool",
            },
        ],
        name: "setApprovalForAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenID_",
                type: "uint256",
            },
        ],
        name: "setTokenID",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract AToken",
                name: "aToken_",
                type: "address",
            },
            {
                internalType: "contract PublicStaking",
                name: "stakeNFT_",
                type: "address",
            },
        ],
        name: "setTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenID_",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];

const _bytecode =
    "0x608060405234801561001057600080fd5b50610f0f806100206000396000f3fe60806040526004361061012d5760003560e01c80638ee25267116100a5578063a22cb46511610074578063cbc7854e11610059578063cbc7854e1461039b578063e35c3e281461040c578063ea785a5e1461042c57600080fd5b8063a22cb4651461035b578063b88d4fde1461037b57600080fd5b80638ee25267146102ce5780639600dd83146102ee578063a0712d681461030e578063a0c1f15e1461032e57600080fd5b806323b872dd116100fc5780632baf2acb116100e15780632baf2acb1461025957806342966c68146102795780636215be77146102ae57600080fd5b806323b872dd146102195780632a0d8bd11461023957600080fd5b806304decf2e14610144578063095ea7b31461019b5780630e4eb15b146101cb5780630f4d14e9146101f957600080fd5b3661013f5761013d60025461044c565b005b600080fd5b34801561015057600080fd5b506000546101719073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156101a757600080fd5b506101bb6101b6366004610c0f565b6104ea565b6040519015158152602001610192565b3480156101d757600080fd5b506101eb6101e6366004610c3b565b61058f565b604051908152602001610192565b34801561020557600080fd5b5061013d610214366004610c5d565b61062c565b34801561022557600080fd5b5061013d610234366004610c76565b6106b5565b34801561024557600080fd5b506101eb610254366004610c5d565b61074e565b34801561026557600080fd5b506101eb610274366004610cb7565b6107eb565b34801561028557600080fd5b50610299610294366004610c5d565b61044c565b60408051928352602083019190915201610192565b3480156102ba57600080fd5b5061013d6102c9366004610c5d565b610898565b3480156102da57600080fd5b5061013d6102e9366004610c5d565b600255565b3480156102fa57600080fd5b5061013d610309366004610c0f565b610926565b34801561031a57600080fd5b506101eb610329366004610c5d565b61099b565b34801561033a57600080fd5b506001546101719073ffffffffffffffffffffffffffffffffffffffff1681565b34801561036757600080fd5b5061013d610376366004610cfa565b6109f3565b34801561038757600080fd5b5061013d610396366004610d33565b610a53565b3480156103a757600080fd5b5061013d6103b6366004610dd2565b6000805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560018054939092169216919091179055565b34801561041857600080fd5b506101eb610427366004610c5d565b610aea565b34801561043857600080fd5b50610299610447366004610c0f565b610b42565b600080546040517f42966c6800000000000000000000000000000000000000000000000000000000815260048101849052829173ffffffffffffffffffffffffffffffffffffffff16906342966c689060240160408051808303816000875af11580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e19190610e00565b91509150915091565b6001546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052600092169063095ea7b3906044016020604051808303816000875af1158015610564573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105889190610e24565b9392505050565b600080546040517f0e4eb15b000000000000000000000000000000000000000000000000000000008152600481018590526024810184905273ffffffffffffffffffffffffffffffffffffffff90911690630e4eb15b906044016020604051808303816000875af1158015610608573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105889190610e41565b6000546040517f99a89ecc000000000000000000000000000000000000000000000000000000008152602a600482015273ffffffffffffffffffffffffffffffffffffffff909116906399a89ecc9083906024016000604051808303818588803b15801561069957600080fd5b505af11580156106ad573d6000803e3d6000fd5b505050505050565b6000546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152848116602483015260448201849052909116906323b872dd90606401600060405180830381600087803b15801561073157600080fd5b505af1158015610745573d6000803e3d6000fd5b50505050505050565b600080546040517f2a0d8bd10000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690632a0d8bd1906024015b6020604051808303816000875af11580156107c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e59190610e41565b92915050565b600080546040517f2baf2acb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152602482018690526044820185905290911690632baf2acb906064016020604051808303816000875af115801561086c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108909190610e41565b949350505050565b6000546040517f8191f5e5000000000000000000000000000000000000000000000000000000008152602a60048201526024810183905273ffffffffffffffffffffffffffffffffffffffff90911690638191f5e590604401600060405180830381600087803b15801561090b57600080fd5b505af115801561091f573d6000803e3d6000fd5b5050505050565b6000546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018490529091169063095ea7b3906044015b600060405180830381600087803b15801561069957600080fd5b600080546040517fa0712d680000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff9091169063a0712d68906024016107a2565b6000546040517fa22cb46500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015283151560248301529091169063a22cb46590604401610981565b6000546040517fb88d4fde00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063b88d4fde90610ab19088908890889088908890600401610e5a565b600060405180830381600087803b158015610acb57600080fd5b505af1158015610adf573d6000803e3d6000fd5b505050505050505050565b600080546040517fe35c3e280000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff9091169063e35c3e28906024016107a2565b600080546040517fea785a5e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018590528392169063ea785a5e9060440160408051808303816000875af1158015610bbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdf9190610e00565b915091509250929050565b73ffffffffffffffffffffffffffffffffffffffff81168114610c0c57600080fd5b50565b60008060408385031215610c2257600080fd5b8235610c2d81610bea565b946020939093013593505050565b60008060408385031215610c4e57600080fd5b50508035926020909101359150565b600060208284031215610c6f57600080fd5b5035919050565b600080600060608486031215610c8b57600080fd5b8335610c9681610bea565b92506020840135610ca681610bea565b929592945050506040919091013590565b600080600060608486031215610ccc57600080fd5b8335610cd781610bea565b95602085013595506040909401359392505050565b8015158114610c0c57600080fd5b60008060408385031215610d0d57600080fd5b8235610d1881610bea565b91506020830135610d2881610cec565b809150509250929050565b600080600080600060808688031215610d4b57600080fd5b8535610d5681610bea565b94506020860135610d6681610bea565b935060408601359250606086013567ffffffffffffffff80821115610d8a57600080fd5b818801915088601f830112610d9e57600080fd5b813581811115610dad57600080fd5b896020828501011115610dbf57600080fd5b9699959850939650602001949392505050565b60008060408385031215610de557600080fd5b8235610df081610bea565b91506020830135610d2881610bea565b60008060408385031215610e1357600080fd5b505080516020909101519092909150565b600060208284031215610e3657600080fd5b815161058881610cec565b600060208284031215610e5357600080fd5b5051919050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501168301019050969550505050505056fea2646970667358221220ca6826405b48523ed6b3ce2cb8285ac1950da8fec420e66bbfc9a4b619a9b78064736f6c634300080d0033";

type ReentrantLoopBurnAccountConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: ReentrantLoopBurnAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReentrantLoopBurnAccount__factory extends ContractFactory {
    constructor(...args: ReentrantLoopBurnAccountConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "ReentrantLoopBurnAccount";
    }

    deploy(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ReentrantLoopBurnAccount> {
        return super.deploy(
            overrides || {}
        ) as Promise<ReentrantLoopBurnAccount>;
    }
    getDeployTransaction(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address: string): ReentrantLoopBurnAccount {
        return super.attach(address) as ReentrantLoopBurnAccount;
    }
    connect(signer: Signer): ReentrantLoopBurnAccount__factory {
        return super.connect(signer) as ReentrantLoopBurnAccount__factory;
    }
    static readonly contractName: "ReentrantLoopBurnAccount";
    public readonly contractName: "ReentrantLoopBurnAccount";
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): ReentrantLoopBurnAccountInterface {
        return new utils.Interface(_abi) as ReentrantLoopBurnAccountInterface;
    }
    static connect(
        address: string,
        signerOrProvider: Signer | Provider
    ): ReentrantLoopBurnAccount {
        return new Contract(
            address,
            _abi,
            signerOrProvider
        ) as ReentrantLoopBurnAccount;
    }
}
