/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type {
    MockEndPointLockable,
    MockEndPointLockableInterface,
} from "../MockEndPointLockable";

const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "f",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "i",
                type: "uint256",
            },
        ],
        name: "AddedOne",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "i",
                type: "uint256",
            },
        ],
        name: "AddedTwo",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bool",
                name: "lock",
                type: "bool",
            },
        ],
        name: "UpgradeLocked",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bool",
                name: "lock",
                type: "bool",
            },
        ],
        name: "UpgradeUnlocked",
        type: "event",
    },
    {
        inputs: [],
        name: "addOne",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "addTwo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "factory",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "i",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "upgradeLock",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "upgradeUnlock",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];

const _bytecode =
    "0x60a060405234801561001057600080fd5b506040516103d23803806103d283398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161034861008a600039600060f001526103486000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806365926e611161005b57806365926e611461009c5780638da5cb5b146100a4578063c45a0155146100ee578063e5aa3d581461011457600080fd5b80630901c43f146100825780634d47524e1461008c5780636057d3ee14610094575b600080fd5b61008a61012b565b005b61008a610198565b61008a6101d6565b61008a610219565b6000546100c49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000006100c4565b61011d60015481565b6040519081526020016100e5565b61016b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff805473ffffffffffffffffffffffffffffffffffffffff169055565b6040516000907fab025e5d52e20aea7d5438c5ad03558d38fb585b22f5380cbad350848ef0a79c908290a2565b6001546101a69060026102c2565b60018190556040517fbfce3a5a2a77b031b0a1ccac19738da9dec550c09b2f06f20fb4952517aef5bd90600090a2565b600180549060006101e6836102da565b90915550506001546040517f395a766f999fe60fe2f05f4b28cac630e02ee29e14a848b81a7fd5ae522bc5be90600090a2565b6102657fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80547fca11c0de15dead10cced00000000000000000000000000000000000000000000179055565b6040516001907fa3f77673c64a3e37508268407c794fccaf65e7f4c6dc9101f7ebdc3aff16479590600090a2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156102d5576102d5610293565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361030b5761030b610293565b506001019056fea26469706673582212208b6c4e5dec868b2483f8d6dc4692c65b6e67b94f95be9746f7141bb8e102184f64736f6c634300080d0033";

type MockEndPointLockableConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: MockEndPointLockableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockEndPointLockable__factory extends ContractFactory {
    constructor(...args: MockEndPointLockableConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "MockEndPointLockable";
    }

    deploy(
        f: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<MockEndPointLockable> {
        return super.deploy(
            f,
            overrides || {}
        ) as Promise<MockEndPointLockable>;
    }
    getDeployTransaction(
        f: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(f, overrides || {});
    }
    attach(address: string): MockEndPointLockable {
        return super.attach(address) as MockEndPointLockable;
    }
    connect(signer: Signer): MockEndPointLockable__factory {
        return super.connect(signer) as MockEndPointLockable__factory;
    }
    static readonly contractName: "MockEndPointLockable";
    public readonly contractName: "MockEndPointLockable";
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): MockEndPointLockableInterface {
        return new utils.Interface(_abi) as MockEndPointLockableInterface;
    }
    static connect(
        address: string,
        signerOrProvider: Signer | Provider
    ): MockEndPointLockable {
        return new Contract(
            address,
            _abi,
            signerOrProvider
        ) as MockEndPointLockable;
    }
}
