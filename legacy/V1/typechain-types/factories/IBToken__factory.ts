/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";
import type { IBToken, IBTokenInterface } from "../IBToken";

const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "validatorStakingSplit_",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "publicStakingSplit_",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "liquidityProviderStakingSplit_",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "protocolFee_",
                type: "uint256",
            },
        ],
        name: "setSplits",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint8",
                name: "accountType_",
                type: "uint8",
            },
            {
                internalType: "address",
                name: "to_",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount_",
                type: "uint256",
            },
        ],
        name: "virtualMintDeposit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];

export class IBToken__factory {
    static readonly abi = _abi;
    static createInterface(): IBTokenInterface {
        return new utils.Interface(_abi) as IBTokenInterface;
    }
    static connect(
        address: string,
        signerOrProvider: Signer | Provider
    ): IBToken {
        return new Contract(address, _abi, signerOrProvider) as IBToken;
    }
}
