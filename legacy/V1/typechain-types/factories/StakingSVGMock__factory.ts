/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type {
    StakingSVGMock,
    StakingSVGMockInterface,
} from "../StakingSVGMock";

const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "shares",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "freeAfter",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "withdrawFreeAfter",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "accumulatorEth",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "accumulatorToken",
                        type: "string",
                    },
                ],
                internalType: "struct StakingSVG.StakingSVGParams",
                name: "svgParams",
                type: "tuple",
            },
        ],
        name: "generateSVG",
        outputs: [
            {
                internalType: "string",
                name: "svg",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];

const _bytecode =
    "0x608060405234801561001057600080fd5b506106f3806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063bb67afe614610030575b600080fd5b61004361003e3660046102a4565b610059565b60405161005091906103d1565b60405180910390f35b60606100648261006a565b92915050565b6060610075826100a5565b61007e83610172565b60405160200161008f92919061043e565b6040516020818303038152906040529050919050565b606060405160200161008f907f3c7376672077696474683d2235303022206865696768743d223530302220766981527f6577426f783d2230203020353030203530302220786d6c6e733d22687474703a60208201527f2f2f7777772e77332e6f72672f323030302f737667220000000000000000000060408201527f20786d6c6e733a786c696e6b3d27687474703a2f2f7777772e77332e6f72672f60568201527f313939392f786c696e6b273e0000000000000000000000000000000000000000607682015260820190565b60608160000151826020015183604001518460600151856080015160405160200161008f959493929190610495565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156101f3576101f36101a1565b60405290565b600082601f83011261020a57600080fd5b813567ffffffffffffffff80821115610225576102256101a1565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561026b5761026b6101a1565b8160405283815286602085880101111561028457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156102b657600080fd5b813567ffffffffffffffff808211156102ce57600080fd5b9083019060a082860312156102e257600080fd5b6102ea6101d0565b8235828111156102f957600080fd5b610305878286016101f9565b82525060208301358281111561031a57600080fd5b610326878286016101f9565b60208301525060408301358281111561033e57600080fd5b61034a878286016101f9565b60408301525060608301358281111561036257600080fd5b61036e878286016101f9565b60608301525060808301358281111561038657600080fd5b610392878286016101f9565b60808301525095945050505050565b60005b838110156103bc5781810151838201526020016103a4565b838111156103cb576000848401525b50505050565b60208152600082518060208401526103f08160408501602087016103a1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600081516104348185602086016103a1565b9290920192915050565b600083516104508184602088016103a1565b8351908301906104648183602088016103a1565b7f3c2f7376673e00000000000000000000000000000000000000000000000000009101908152600601949350505050565b7f3c7465787420783d2731302720793d273230273e5368617265733a20000000008152600086516104cd81601c850160208b016103a1565b80830190507f3c2f746578743e0000000000000000000000000000000000000000000000000080601c8301527f3c7465787420783d2731302720793d273430273e467265652061667465723a2060238301528751610532816043850160208c016103a1565b60439201918201527f3c7465787420783d2731302720793d273630273e576974686472617720467265604a8201527f652041667465723a200000000000000000000000000000000000000000000000606a8201528551610599816073840160208a016103a1565b6106b06106326106aa61065b61063261062c6105dd6073888a01017f3c2f746578743e00000000000000000000000000000000000000000000000000815260070190565b7f3c7465787420783d2731302720793d273830273e416363756d756c61746f722081527f28455448293a2000000000000000000000000000000000000000000000000000602082015260270190565b8b610422565b7f3c2f746578743e00000000000000000000000000000000000000000000000000815260070190565b7f3c7465787420783d2731302720793d27313030273e416363756d756c61746f7281527f2028546f6b656e293a20000000000000000000000000000000000000000000006020820152602a0190565b87610422565b999850505050505050505056fea2646970667358221220242ae9c96d4079cb06cd35818c7f9f2311771ba1007c923c36755832938f5aba64736f6c634300080d0033";

type StakingSVGMockConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: StakingSVGMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingSVGMock__factory extends ContractFactory {
    constructor(...args: StakingSVGMockConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "StakingSVGMock";
    }

    deploy(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<StakingSVGMock> {
        return super.deploy(overrides || {}) as Promise<StakingSVGMock>;
    }
    getDeployTransaction(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address: string): StakingSVGMock {
        return super.attach(address) as StakingSVGMock;
    }
    connect(signer: Signer): StakingSVGMock__factory {
        return super.connect(signer) as StakingSVGMock__factory;
    }
    static readonly contractName: "StakingSVGMock";
    public readonly contractName: "StakingSVGMock";
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): StakingSVGMockInterface {
        return new utils.Interface(_abi) as StakingSVGMockInterface;
    }
    static connect(
        address: string,
        signerOrProvider: Signer | Provider
    ): StakingSVGMock {
        return new Contract(address, _abi, signerOrProvider) as StakingSVGMock;
    }
}
