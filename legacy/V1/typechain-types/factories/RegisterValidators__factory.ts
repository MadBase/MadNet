/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type {
    RegisterValidators,
    RegisterValidatorsInterface,
} from "../RegisterValidators";

const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "factory_",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "EPOCH_LENGTH",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_salt",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "_factory",
                type: "address",
            },
        ],
        name: "getMetamorphicContractAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "validatorsAccounts_",
                type: "address[]",
            },
        ],
        name: "registerValidators",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "numValidators",
                type: "uint256",
            },
        ],
        name: "stakeValidators",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];

const _bytecode =
    "";

type RegisterValidatorsConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: RegisterValidatorsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RegisterValidators__factory extends ContractFactory {
    constructor(...args: RegisterValidatorsConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "RegisterValidators";
    }

    deploy(
        factory_: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<RegisterValidators> {
        return super.deploy(
            factory_,
            overrides || {}
        ) as Promise<RegisterValidators>;
    }
    getDeployTransaction(
        factory_: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(factory_, overrides || {});
    }
    attach(address: string): RegisterValidators {
        return super.attach(address) as RegisterValidators;
    }
    connect(signer: Signer): RegisterValidators__factory {
        return super.connect(signer) as RegisterValidators__factory;
    }
    static readonly contractName: "RegisterValidators";
    public readonly contractName: "RegisterValidators";
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): RegisterValidatorsInterface {
        return new utils.Interface(_abi) as RegisterValidatorsInterface;
    }
    static connect(
        address: string,
        signerOrProvider: Signer | Provider
    ): RegisterValidators {
        return new Contract(
            address,
            _abi,
            signerOrProvider
        ) as RegisterValidators;
    }
}
