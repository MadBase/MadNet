/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type {
    ATokenBurnerMock,
    ATokenBurnerMockInterface,
} from "../ATokenBurnerMock";

const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "burn",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_salt",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "_factory",
                type: "address",
            },
        ],
        name: "getMetamorphicContractAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];

const _bytecode =
    "0x60c060405234801561001057600080fd5b50336080526100bd6520aa37b5b2b760d11b61002b60805190565b6040517fff0000000000000000000000000000000000000000000000000000000000000060208201526001600160601b0319606083901b166021820152603581018390527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be6055820181905260009160750160408051601f198184030181529190528051602090910120949350505050565b6001600160a01b031660a05260805160a0516102b36100eb60003960006101510152600050506102b36000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638653a4651461003b5780639dc29fac1461013a575b600080fd5b610111610049366004610227565b6040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606083901b166021820152603581018390527f1c0bf703a3415cada9785e89e9d70314c3111ae7d8e04f33bb42eb1d264088be60558201819052600091607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120949350505050565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61014d610148366004610253565b61014f565b005b7f00000000000000000000000000000000000000000000000000000000000000006040517f6f6ebec800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018490529190911690636f6ebec890604401600060405180830381600087803b1580156101e257600080fd5b505af11580156101f6573d6000803e3d6000fd5b505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461022257600080fd5b919050565b6000806040838503121561023a57600080fd5b8235915061024a602084016101fe565b90509250929050565b6000806040838503121561026657600080fd5b61026f836101fe565b94602093909301359350505056fea264697066735822122050869cfafe42599dcb2c8e6b8461999919365cb0f67349181df002ce0c75fa4464736f6c634300080d0033";

type ATokenBurnerMockConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: ATokenBurnerMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ATokenBurnerMock__factory extends ContractFactory {
    constructor(...args: ATokenBurnerMockConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "ATokenBurnerMock";
    }

    deploy(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ATokenBurnerMock> {
        return super.deploy(overrides || {}) as Promise<ATokenBurnerMock>;
    }
    getDeployTransaction(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address: string): ATokenBurnerMock {
        return super.attach(address) as ATokenBurnerMock;
    }
    connect(signer: Signer): ATokenBurnerMock__factory {
        return super.connect(signer) as ATokenBurnerMock__factory;
    }
    static readonly contractName: "ATokenBurnerMock";
    public readonly contractName: "ATokenBurnerMock";
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): ATokenBurnerMockInterface {
        return new utils.Interface(_abi) as ATokenBurnerMockInterface;
    }
    static connect(
        address: string,
        signerOrProvider: Signer | Provider
    ): ATokenBurnerMock {
        return new Contract(
            address,
            _abi,
            signerOrProvider
        ) as ATokenBurnerMock;
    }
}
