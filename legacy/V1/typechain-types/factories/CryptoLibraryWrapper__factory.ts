/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type {
    CryptoLibraryWrapper,
    CryptoLibraryWrapperInterface,
} from "../CryptoLibraryWrapper";

const _abi = [
    {
        inputs: [
            {
                internalType: "bytes",
                name: "groupSignature_",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "bClaims_",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "salt",
                type: "uint256",
            },
        ],
        name: "validateBadSignatureASM",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "groupSignature_",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "bClaims_",
                type: "bytes",
            },
        ],
        name: "validateSignature",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "groupSignature_",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "bClaims_",
                type: "bytes",
            },
        ],
        name: "validateSignatureASM",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];

const _bytecode =
    "0x608060405234801561001057600080fd5b50612381806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806342eb4490146100465780636283d2a514610074578063fd7d665814610087575b600080fd5b610059610054366004611ec0565b61009a565b60408051921515835260208301919091520160405180910390f35b610059610082366004611ec0565b61013c565b610059610095366004611f2c565b6101c4565b6000806000806100df88888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610286915050565b9150915060005a905061012187876040516100fb929190611fa0565b604080519182900382206020830152016040516020818303038152906040528385610431565b5a61012c9083611fdf565b9450945050505094509492505050565b60008060008061018188888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610286915050565b9150915060005a9050610121878760405161019d929190611fa0565b604080519182900382206020830152015b60405160208183030381529060405283856105e0565b60008060008061020989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610286915050565b9150915060005a905061026a88888860405160200161022a93929190611ff6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012090830152016101ae565b5a6102759083611fdf565b945094505050509550959350505050565b61028e611e1d565b610296611e3b565b826102a260c082612008565b117f31343030000000000000000000000000000000000000000000000000000000006040516020016102d691815260200190565b60405160208183030381529060405290610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d9190612050565b60405180910390fd5b5061033260c084612008565b845110157f313430310000000000000000000000000000000000000000000000000000000060405160200161036991815260200190565b604051602081830303815290604052906103b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d9190612050565b506103c5846103c0856000612008565b6105f3565b82526103d6846103c0856020612008565b60208301526103ea846103c0856040612008565b60408301526103fe846103c0856060612008565b6060830152610412846103c0856080612008565b8152610423846103c08560a0612008565b602082015290939092509050565b600061043b611e3b565b6104448561070f565b90506105d760405180610180016040528086600060028110610468576104686120a1565b6020020151815260200186600160028110610485576104856120a1565b602002015181526020017f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81526020017f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec81526020017f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d81526020018360006002811061053a5761053a6120a1565b6020020151815260200183600160028110610557576105576120a1565b6020020151815260200185600060048110610574576105746120a1565b6020020151815260200185600160048110610591576105916120a1565b60200201518152602001856002600481106105ae576105ae6120a1565b60200201518152602001856003600481106105cb576105cb6120a1565b60200201519052610936565b95945050505050565b60006105ea611e3b565b610444856109e1565b60008161060181601f612008565b117f313030380000000000000000000000000000000000000000000000000000000060405160200161063591815260200190565b6040516020818303038152906040529061067c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d9190612050565b5061068882601f612008565b8351117f31303039000000000000000000000000000000000000000000000000000000006040516020016106be91815260200190565b60405160208183030381529060405290610705576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d9190612050565b5050016020015190565b610717611e3b565b600061074483827f010000000000000000000000000000000000000000000000000000000000000061143c565b90506000610793847f02000000000000000000000000000000000000000000000000000000000000007f030000000000000000000000000000000000000000000000000000000000000061143c565b905060006107a083611545565b905060006107ad83611545565b90506108336040518060800160405280846000600281106107d0576107d06120a1565b60200201518152602001846001600281106107ed576107ed6120a1565b602002015181526020018360006002811061080a5761080a6120a1565b6020020151815260200183600160028110610827576108276120a1565b60200201519052611a7f565b945061083e85611b37565b604080517f3730340000000000000000000000000000000000000000000000000000000000602082015201604051602081830303815290604052906108b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d9190612050565b506108ba85611b9b565b604080517f37303500000000000000000000000000000000000000000000000000000000006020820152016040516020818303038152906040529061092c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d9190612050565b5050505050919050565b6000610940611e59565b60006020826101808660087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa9050806109d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f656c6c69707469632063757276652070616972696e67206661696c6564000000604482015260640161031d565b505160011492915050565b6109e9611e3b565b61141f565b6020831015610a21577f696e76616c6964206c656e00000000000000000000000000000000000000000060005260206000fd5b5b601f831115610a6057815181527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610a22565b8215610aa0578151815160208590036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01801990921691161781525b505050565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478283097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781840990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476003820890507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47848509149392505050565b60c081017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478384097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47806004830882098060608501527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd45608085015260208360c08660055afa610bf8577f657870206d6f64206661696c656420617420310000000000000000000000000060005260206000fd5b5081517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4782800991507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4777b3c4d79d41a91759a9e4c7e359b6b89eaec68e62effffffd83097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478282097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790810391507759e26bcea0d48bacd4f263f1acdb5c4f5763473177fffffe820890507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478182097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4782820990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476003820890507f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52608087015280606087015260208560c08860055afa610d99577f657870206d6f64206661696c656420617420320000000000000000000000000060005260206000fd5b60017f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea3881115610de657507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd465b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47818751097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47818209808403610e4c57848b528160208c01525050505050505050505050565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47600186087f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47908103955085800993507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4785850993507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476003850893508360608a015260208860c08b60055afa610f27577f657870206d6f64206661696c656420617420330000000000000000000000000060005260206000fd5b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478389510991507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478283099050808403610f9157848b528160208c01525050505050505050505050565b507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760047f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478b8c090895507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4786870993507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4786850993507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd477f2042def740cbc01bd03583cf0100e593ba56470b9af68708d2c05d6490535385850993507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478585097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790810394506001850893507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784850992507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784840992507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760038408925082606089015260208760c08a60055afa61116f577f657870206d6f64206661696c656420617420340000000000000000000000000060005260206000fd5b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4782885109938a525050506020909601959095525050505050565b600183016111bc8484600185016109ee565b60008253808220600183538183206002845382842060038553838520935060208552602080860152602060408601527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760a08601527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47807f0e0a77c19a07df2f666ea36f7879462c0a78eb28f5c70b3dd35d438dc58f0d9d8509830891507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47807f0e0a77c19a07df2f666ea36f7879462c0a78eb28f5c70b3dd35d438dc58f0d9d8309850890506112ae888387610b44565b87519350602088015192506112c38385610aa5565b9150816112f4577f7831207931206e6f7420696e206375727665000000000000000000000000000060005260206000fd5b6112ff888287610b44565b50865160208801516113118183610aa5565b925082611342577f7832207932206e6f7420696e206375727665000000000000000000000000000060005260206000fd5b848652836020870152816040870152806060870152505060408460808660065afa611391577f626e32353620616464206661696c65640000000000000000000000000000000060005260206000fd5b83519250602084015191506113a68284610aa5565b9050806113d7577f7832207932206e6f7420696e206375727665000000000000000000000000000060005260206000fd5b50600181148215171561140e577f706f696e74206e6f74207361666520746f207369676e0000000000000000000060005260206000fd5b818652806020870152505050505050565b602082018251604051611434848385846111aa565b505050919050565b60008083856040516020016114529291906120d0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290528051602091820120925060009161149c9186918991016120d0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012090507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47817f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd477f0e0a77c19a07df2f666ea36f7879462c0a78eb28f5c70b3dd35d438dc58f0d9d8509089695505050505050565b61154d611e3b565b600080807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4785860992507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476004840891507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4782840990506115cd81611bc7565b905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4783840990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4783820990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47848509935060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478577b3c4d79d41a91759a9e4c7e359b6b89eaec68e62effffffd0990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4783820990506116b281611c1a565b90507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd477759e26bcea0d48bacd4f263f1acdb5c4f5763473177fffffe8208905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760018308905061172481611c1a565b905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47847f2042def740cbc01bd03583cf0100e593ba56470b9af68708d2c05d64905353850990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47858209905061179d81611c1a565b90507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760018208905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784850990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784820990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47600382089050600061184682611c56565b90507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784850991507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784830991507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760038308915060006118c683611c56565b9050600060046118d7600384612118565b6118e2600186612118565b6118ec919061218c565b6118f69190612248565b6119019060016122d7565b9050600081600103611914575086611926565b81600203611923575085611926565b50845b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781820994507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781860994507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476003860894506119a285611cd7565b945060006119af8f611d24565b90507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781870995506119f4604051806040016040528084815260200188815250611b37565b604080517f373036000000000000000000000000000000000000000000000000000000000060208201520160405160208183030381529060405290611a66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d9190612050565b50508c5250505060208901525095979650505050505050565b611a87611e3b565b600060408260808560067ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa9050807f3730300000000000000000000000000000000000000000000000000000000000604051602001611ae991815260200190565b60405160208183030381529060405290611b30576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d9190612050565b5050919050565b80516000907f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47906003908290819080098551090860208301517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479080091492915050565b80516000901580611bad575081516001145b15611bba57506000919050565b506001919050565b919050565b6000611c14827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd457f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611d75565b92915050565b600081600003611c2c57506000919050565b611c14827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611fdf565b600080611ca4837f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea37f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611d75565b90508015611ccc576001611cbb828216600261218c565b611cc59190612118565b9150611cd1565b600091505b50919050565b6000611c14827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611d75565b60017f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea3821115611bc257507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd46919050565b60008060405160208152602080820152602060408201528560608201528460808201528360a082015260208160c08360055afa90519250905080611e15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6d6f64756c6172206578706f6e656e74696174696f6e2066616c696564000000604482015260640161031d565b509392505050565b60405180608001604052806004906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60008083601f840112611e8957600080fd5b50813567ffffffffffffffff811115611ea157600080fd5b602083019150836020828501011115611eb957600080fd5b9250929050565b60008060008060408587031215611ed657600080fd5b843567ffffffffffffffff80821115611eee57600080fd5b611efa88838901611e77565b90965094506020870135915080821115611f1357600080fd5b50611f2087828801611e77565b95989497509550505050565b600080600080600060608688031215611f4457600080fd5b853567ffffffffffffffff80821115611f5c57600080fd5b611f6889838a01611e77565b90975095506020880135915080821115611f8157600080fd5b50611f8e88828901611e77565b96999598509660400135949350505050565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015611ff157611ff1611fb0565b500390565b82848237909101908152602001919050565b6000821982111561201b5761201b611fb0565b500190565b60005b8381101561203b578181015183820152602001612023565b8381111561204a576000848401525b50505050565b602081526000825180602084015261206f816040850160208701612020565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7fff00000000000000000000000000000000000000000000000000000000000000831681526000825161210a816001850160208701612020565b919091016001019392505050565b6000808312837f80000000000000000000000000000000000000000000000000000000000000000183128115161561215257612152611fb0565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01831381161561218657612186611fb0565b50500390565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156121cd576121cd611fb0565b7f8000000000000000000000000000000000000000000000000000000000000000600087128682058812818416161561220857612208611fb0565b6000871292508782058712848416161561222457612224611fb0565b8785058712818416161561223a5761223a611fb0565b505050929093029392505050565b60008261227e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f8000000000000000000000000000000000000000000000000000000000000000831416156122d2576122d2611fb0565b500590565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0384138115161561231157612311611fb0565b827f800000000000000000000000000000000000000000000000000000000000000003841281161561234557612345611fb0565b5050019056fea26469706673582212208e17db9195526e4cdcce895d9bbe9c6215d8f24bb9c1e02e5dffc6d09b6518d764736f6c634300080d0033";

type CryptoLibraryWrapperConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: CryptoLibraryWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CryptoLibraryWrapper__factory extends ContractFactory {
    constructor(...args: CryptoLibraryWrapperConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "CryptoLibraryWrapper";
    }

    deploy(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<CryptoLibraryWrapper> {
        return super.deploy(overrides || {}) as Promise<CryptoLibraryWrapper>;
    }
    getDeployTransaction(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address: string): CryptoLibraryWrapper {
        return super.attach(address) as CryptoLibraryWrapper;
    }
    connect(signer: Signer): CryptoLibraryWrapper__factory {
        return super.connect(signer) as CryptoLibraryWrapper__factory;
    }
    static readonly contractName: "CryptoLibraryWrapper";
    public readonly contractName: "CryptoLibraryWrapper";
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): CryptoLibraryWrapperInterface {
        return new utils.Interface(_abi) as CryptoLibraryWrapperInterface;
    }
    static connect(
        address: string,
        signerOrProvider: Signer | Provider
    ): CryptoLibraryWrapper {
        return new Contract(
            address,
            _abi,
            signerOrProvider
        ) as CryptoLibraryWrapper;
    }
}
