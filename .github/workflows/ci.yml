name: Alicenet CI

on:
  push:
    branches: [ main, candidate ]
  pull_request:
    branches: [ main, candidate ]

env:
  NODE_VERSION: 16.x

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:

  solidity-build:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./bridge
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/node-cache

  solidity-unit-tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # when adding a new test folder to the smart contracts make sure to
        # name it starting with 0-9 or A-Z
        include:
          - test-group: "[0-9a-dA-D]"
          - test-group: "[eE]"
            sub-filter-exclude: "ethdkg/phases"
          - test-group: "ethdkg"
            sub-filter-include: "phases"
            sub-filter-exclude: "accusations"
          - test-group: "ethdkg"
            sub-filter-include: "phases/accusations"
          - test-group: "[f-qF-Q]"
          - test-group: "[r-sR-S]"
          - test-group: "[t-zT-Z]"

    needs: solidity-build
    defaults:
      run:
        working-directory: ./bridge
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/node-cache
      - uses: ./.github/actions/solidity-tests
        with:
          test-group: ${{ matrix.test-group }}
          sub-filter-include: ${{ matrix.sub-filter-include }}
          sub-filter-exclude: ${{ matrix.sub-filter-exclude }}

  solidity-linter:
    runs-on: ubuntu-20.04
    needs: solidity-build
    defaults:
      run:
        working-directory: ./bridge
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/node-cache
      - run: npm run lint-solidity

  typescript-linter:
    runs-on: ubuntu-20.04
    needs: solidity-build
    defaults:
      run:
        working-directory: ./bridge
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/node-cache
      - run: npm run clean && npm run compile && npm run typechain
      - run: npm run lint

  golang-build:
    runs-on: ${{ matrix.os }}
    needs: solidity-build
    strategy:
      matrix:
        os: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/alicenet-config
      - run: make build
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: alicenet-${{ github.head_ref || github.ref_name }}-${{ matrix.os }}
          path: ./madnet

  golang-vet:
    runs-on: ubuntu-20.04
    needs: golang-build
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/alicenet-config
      - run: go vet ./...

  golang-linter:
    runs-on: ubuntu-20.04
    needs: golang-build
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/alicenet-config
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3

  golang-unit-tests:
    runs-on: ${{ matrix.os }}
    needs: golang-build
    strategy:
      matrix:
        os: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/alicenet-config
      # tool to format the test output
      - name: Set up gotestfmt
        run: go install github.com/haveyoudebuggedit/gotestfmt/v2/cmd/gotestfmt@latest
      # Run tests with nice formatting. Save the original log in /tmp/gotest.log
      # packages where the tests are stuck: ["blockchain", "badgerTrie", "consensus", "transport"]
      - name: Run tests
        run: |
          set -euo pipefail
          go test -json -v $(go list ./... | grep -Ev '/blockchain|/badgerTrie|/consensus|/transport|/testutils') 2>&1 | tee /tmp/gotest.log | gotestfmt
